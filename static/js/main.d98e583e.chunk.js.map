{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/COVID-19.bf2a287a.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaLogo","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d98e583e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3XfGO\",\"card\":\"Cards_card__2nIBo\",\"infected\":\"Cards_infected__1CIQx\",\"recovered\":\"Cards_recovered__qp59Z\",\"deaths\":\"Cards_deaths__3PaUE\"};","import React, { Component } from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data :{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    \r\n    if(!confirmed){\r\n   return \"Loading...\"\r\n    }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n             <Grid container spacing={3} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                    start={0}\r\n                    end={confirmed.value}\r\n                    duration={2.5}\r\n                    seperator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                    start={0}\r\n                    end={recovered.value}\r\n                    duration={2.5}\r\n                    seperator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                    start={0}\r\n                    end={deaths.value}\r\n                    duration={2.5}\r\n                    seperator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                </CardContent>\r\n               </Grid>\r\n             </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n \r\n let changableUrl = url;\r\n\r\n if(country) {\r\n     changableUrl = `${url}/countries/${country}`\r\n }\r\n\r\n\r\n    try {\r\n   const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changableUrl)\r\n\r\n  \r\n  \r\n  return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch (error){\r\n   \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n    const { data: {countries} } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n   const fetchAPI = async () => {\r\n       setDailyData(await fetchDailyData());\r\n   }\r\n\r\n\r\n   fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n   dailyData.length ? \r\n   (\r\n   <Line\r\n   data={{\r\n       labels: dailyData.map(({date }) => date),\r\n       datasets: [{\r\n           data: dailyData.map(({ confirmed }) => confirmed),\r\n           label: 'Infected',\r\n           borderColor: '#3333ff',\r\n           fill: true,\r\n       },{\r\n        data: dailyData.map(({ deaths }) => deaths),\r\n        label: 'Deaths',\r\n        borderColor: 'red',\r\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n        fill: true,\r\n       }],\r\n   }}\r\n   />) : null\r\n\r\n    );\r\n\r\n const barChart = (\r\n     confirmed\r\n     ? (\r\n         <Bar\r\n         data= {{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [{\r\n            label: 'People',\r\n            backgroundColor: [\r\n                'rgba(0,0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(255,0, 0, 0.5)',\r\n            ],\r\n            data:[confirmed.value, recovered.value, deaths.value ]\r\n        }]\r\n         }}\r\n        options={{\r\n            legend: {display: false},\r\n            title: { display: true, text: `Current state in ${country}`},\r\n        }}\r\n         />\r\n     ) : null\r\n );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api'\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n   useEffect(() => {\r\n       const fetchAPI = async () => {\r\n     setFetchedCountries(await fetchCountries());\r\n       }\r\n\r\n       fetchAPI();\r\n\r\n   }, [setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                  {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}  \r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaLogo from './images/COVID-19.bf2a287a.png'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n      data: {},\r\n      country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData})\r\n    }\r\n\r\n   handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({data: fetchedData, country: country});\r\n   }\r\n\r\n    render(){\r\n\r\n        const {data, country} = this.state\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img\r\n                src={coronaLogo}\r\n                className={styles.image}\r\n                alt=\"COVID-19\"\r\n                />\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1kGkm\",\"image\":\"App_image__1de7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1upFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2TfGy\"};","module.exports = __webpack_public_path__ + \"static/media/COVID-19.bf2a287a.7786bbd4.png\";"],"sourceRoot":""}